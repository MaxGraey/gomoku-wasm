{
  "version": 3,
  "sources": [
    "node_modules/as2d/node_modules/assemblyscript/lib/loader/index.js",
    "../../src/shared/CanvasPatternRepetition.ts",
    "../../src/shared/FillRule.ts",
    "../../src/shared/ImageSmoothingQuality.ts",
    "../../src/shared/GlobalCompositeOperationValue.ts",
    "../../src/shared/CanvasDirection.ts",
    "../../src/shared/TextAlign.ts",
    "../../src/shared/TextBaseline.ts",
    "../../src/shared/LineCap.ts",
    "../../src/shared/LineJoin.ts",
    "../../src/glue/AS2DGlue.ts",
    "../../src/shared/GlobalCompositeOperation.ts",
    "../src/index.ts",
    "src/vm.ts",
    "src/index.ts"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AKDA,AJAA,ACAA,ASAA,APAA,ADAA,AKAA,ACAA,AHAA,ACAA,APEA,IEFY,ACAA,AKAA,OAIX,CNDA,aCCA;ADJD,ACAA,AKAA,ARGA,WEHY,ACAA,AKAA,OAAO,CNAC,aCAa;AHIjC,GCFG,AMAA,CLDD,ACAA,AKAA,qCAAQ,CAAA,ONAG,CAAA,iBCAJ,CAAA;AFET,AMAA,AKDA,AZGA,GKFG,AMAA,APAA,CHAS,ACDV,ACAA,AKAA,ADCU,YAyBX,WNRA,gBOlBU,CAAA,AIAgC,KVA9B,CAAA,uBCAD,CAAA;AEEZ,AJDA,ACAA,ASCA,APAA,AGDA,AKCA,AZEA,CEHC,EAHW,CGIA,AMAA,APAA,ADDV,AKAA,KICc,EXDJ,ACHQ,AKGR,GLHA,KGiBX,IEduB,GKCS,CAAI,CDgHpC,ETpHmB,GEoHnB,AQhHkD,CXDhB,CCHvB,AUIyC,OAAiB,GJD1D,CAAA,KNHQ,QAGnB,UCAS,CAAA;AECV,AMAA,APAA,ADAA,AKAA,ARGA,CGHC,AKAA,ELJW,AKAA,AFKT,CLDD,AMAA,AKAmD,MJJlC,CHIP,AMAA,APAA,EIJA,WLAqB,EEIN,CFJf,CKAO,AIIkC,EAAA,GJJzC,EGIwB,KPAK,EQA6B,MJJnD,QLAc,AKIhC,KLJW,6BAAqB,QAIhC;AGED,ANEA,IKHE,AMAA,APAA,AECU,AMDV,IAAI,IAAI,CNsBT,EMtByB,IAAI,mBAAQ,EAAE,CAAC;ANCzC,ANGA,GSFG,CGDD,GXAG,CMAC,GDAM,AMAH,IAAI,CAAC,INAO,aMAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AHEjD,AGDA,AZGA,CYHC,GXAC,AQCU,AHDV,ACAA,GFAG,AMAA,APAA,KKmBJ,qCFnBQ,CAAA,2BNAG,CAAA;AQCZ,AGJA,AZOA,IKHE,AJAA,AUAA,APAA,AGAA,OEAU,QAAQ,2BGDnB,SPCQ,CAAA,iCMAQ,CAAA,SPAE,CAAA;AQCnB,AZGA,IKHE,AMAA,APAA,AKAA,IHAI,CMAU,WAAW,CAAI,GAAQ,EAAE,OAAiB;AZI1D,IMHE,AMDuC,GXCpC,CMAC,oBKDmC,EAAA,YAAiB,GNChD,CAAA;ANIV,ICHE,AKAA,ACAA,AKDA,GPCG,CODC,IAAI,GAAgB,IAAI,mBAAQ,EAAE,CAAC,gBLC5B,CAAA,uBNAC,CAAA;ADId,IKHE,AJAA,AMAA,AKDA,GDCG,APAA,IQDI,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,aPC/B,CAAA;AOAT,AZIA,AchBA,CFYC,GPCC,AMAA,APAA,AUbF,EAAA,CLaK,CHAC,CQbN,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,+CHae,CAAA,SPAE,CAAA;AQJjB,AZQA,IWHE,APAA,AKAA,AHAA,GLAG,CMAC,0BKFL,WHEU,CAAA,CHAA,CAAA;AMAX,AZIA,AchBA,EAAE,CAAC,CbaD,AQAA,AHAA,ACAA,GFAG,ASbL,CAAQ,CFYQ,AEZhB,EAAW,UAAU,KAAV,EAAe,CFYU,CAAI,QAA2B,EAAE,OAAiB,QLC1E,CAAA,yBNAE,CAAA;ADId,AchBI,EAAA,ETaF,AJAA,AMAA,AKFmE,GDEhE,APAA,EUbM,CAAC,GAAR,CAAY,cFWqD,AEXjE,EFWiE,AEXrC,KAA5B,OFWkF,qBPEzE,CAAA;AACb,ALGA,AchBC,CTaA,ASfD,ETEY,ASAT,CHaD,APAA,AQFA,GEbF,CReM,AMFA,IAAI,GAAgB,GPXC,COWG,EPXlB,iBOW0B,EAAE,CAAC,GPXd,KAAf,uBAAe,QAa1B,OMAe,CAAA,SPAE,CAAA;AJIlB,AcfA,EAAE,CAAC,CHYD,APAA,AEAA,AMFA,GXEG,AQAA,CFAC,GKFG,CEVT,GFUa,CAAC,oBAAoB,CAAC,QAAQ,EAAE,ENEjC,CAAA,IMFwC,CAAC,CAAC;AACtD,AZKA,CYLC,GXEC,AQAA,AHAA,ACAA,yCEAS,CAAA,iBFAK,CAAA,mBNAD,CAAA;AACf,AWNA,AZSA,CCHC,EAjBW,CQiBV,AFAA,GIAG,APAA,mBHjB8B,GAAvB,uBWcX,QXdkC,KAAvB,+BAAuB,QAiBlC;AWDD,AZKA,IWHE,APAA,IEAI,6BMF0B,oDDEf,CAAA,SPAE,CAAA;AQAnB,AZIA,IWHE,APAA,AEAA,ICAI,sCKDmC,CNC9B,CAAA;AMAX,AZIA,IMHE,ACAA,4CKDyC,iBLC1B,CAAA;AKAjB,AZIA,IOHE,GIAG,APAA,AKAA,+CGD4C;AACjD,AZIA,IWHE,APAA,AKAA,IHAI,+BMD4B,MHCvB,CAAA,qDEAW,CAAA,SPAE,CAAA;AKCxB,AGDA,AZIA,CSHC,EAlBW,CEkBV,APAA,AEAA,ICAI,GElBc,GAAR,gBAAQ,KAAR,QHkBH,CAAA,OGlBW,IGiB8B,IHCjD;AHCD,AMDA,AZIA,CMHC,EArBW,CCqBV,QDrBmB,GAAT,iBAAS,KAAT,iBAAS,CCqBT,CAAA,IKD2C,ENCtD;ACCD,AKDA,AZIA,COHC,EAzBW,YAAY,GAAZ,oBAAY,KAAZ,SKwBmC,WLxBvB,QAyBvB;AKAD,AZIA,OWHK,APAA,+BQD4B;AACjC,AZIA,IWHE,APAA,mCQDgC,wDDCd,CAAA,SPAE,CAAA;AQAtB,AZIA,IWHE,APAA,oCQDiC;AACnC,AZIA,2CYJsC;AZKtC,OWHK,APAA;AMjCL,AVqCA,IWHE,APAA,gDMlCuG,6CCkCpF,CAAA,SPAE,CAAA;AMhCvB,AVoCA,IWHE,APAA,yEMjC0E;AAE5E,AVmCA,+CUnC8C;AAC9C,AVmCA,yEUnCwE;AACxE,AVmCA,OWHK,APAA,kFMhCmF;AACxF,AVmCA,IWHE,APAA,yDMhC0D,sCCgCtC,CAAA,SPAE,CAAA;AM/BxB,AVmCA,IWHE,APAA,6CMhC8C;AAChD,AVmCA,uDUnCsD;AACtD,AVmCA,OWHK,APAA,sCMhCuC;AAC5C,AVmCA,IWHE,APAA,2CMhC4C,kCCgCjC,CAAA,SPAE,CAAA;AM9Bf,AVkCA,IWHE,APAA;AJIF,IUnCA;AVoCA,OWHK,APAA,CMhCI,YAAO,GAAQ,IAAI,CAAC;AVoC7B,IWHE,APAA,IMhCO,SAAI,GAAqC,IAAI,CAAC,kDCgC7C,CAAA,SPAE,CAAA;AJIZ,IWHE,APAA,IMhCQ,OAAE,GAAW,CAAC,CAAC,CAAC;AVoC1B,IUyTA,CAAC;AVxTD,IUnCS,GCgCJ,APAA,iCMhCqB,GAAxB,UAAyB,MAAW,EAAE,OAAY;AVoCpD,IWHE,APAA,IMhCE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,2CCgCjB,CAAA,SPAE,CAAA;AJIZ,IWHE,APAA,IMhCE,IAAI,CAAC,WAAW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",
  "file": "src.f10117fe.js",
  "sourceRoot": "..",
  "sourcesContent": [
    "\"use strict\";\n\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\nconst thisPtr = Symbol();\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(U32, U16, ptr) {\n  var dataLength = U32[ptr >>> 2];\n  var dataOffset = (ptr + 4) >>> 1;\n  var dataRemain = dataLength;\n  var parts = [];\n  const chunkSize = 1024;\n  while (dataRemain > chunkSize) {\n    let last = U16[dataOffset + chunkSize - 1];\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\n    let part = U16.subarray(dataOffset, dataOffset += size);\n    parts.push(String.fromCharCode.apply(String, part));\n    dataRemain -= size;\n  }\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  var baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    var buffer = memory.buffer;\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  var env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    var memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  var rawExports = instance.exports;\n  var memory = rawExports.memory;\n  var memory_allocate = rawExports[\"memory.allocate\"];\n  var memory_fill = rawExports[\"memory.fill\"];\n  var memory_free = rawExports[\"memory.free\"];\n  var table = rawExports.table;\n  var setargc = rawExports._setargc || function() {};\n\n  // Provide views for all sorts of basic values\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\n\n  /** Updates memory views if memory has grown meanwhile. */\n  function checkMem() {\n    // see: https://github.com/WebAssembly/design/issues/1210\n    if (buffer !== memory.buffer) {\n      buffer = memory.buffer;\n      I8  = new Int8Array(buffer);\n      U8  = new Uint8Array(buffer);\n      I16 = new Int16Array(buffer);\n      U16 = new Uint16Array(buffer);\n      I32 = new Int32Array(buffer);\n      U32 = new Uint32Array(buffer);\n      if (hasBigInt64) {\n        I64 = new BigInt64Array(buffer);\n        U64 = new BigUint64Array(buffer);\n      }\n      F32 = new Float32Array(buffer);\n      F64 = new Float64Array(buffer);\n    }\n  }\n  checkMem();\n\n  /** Allocates a new string in the module's memory and returns its pointer. */\n  function newString(str) {\n    var dataLength = str.length;\n    var ptr = memory_allocate(4 + (dataLength << 1));\n    var dataOffset = (4 + ptr) >>> 1;\n    checkMem();\n    U32[ptr >>> 2] = dataLength;\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.newString = newString;\n\n  /** Gets a string from the module's memory by its pointer. */\n  function getString(ptr) {\n    checkMem();\n    return getStringImpl(U32, U16, ptr);\n  }\n\n  baseModule.getString = getString;\n\n  function computeBufferSize(byteLength) {\n    const HEADER_SIZE = 8;\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\n  }\n\n  /** Creates a new typed array in the module's memory and returns its pointer. */\n  function newArray(view, length, unsafe) {\n    var ctor = view.constructor;\n    if (ctor === Function) { // TypedArray constructor created in memory\n      ctor = view;\n      view = null;\n    } else { // TypedArray instance copied into memory\n      if (length === undefined) length = view.length;\n    }\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    var byteLength = elementSize * length;\n    var ptr = memory_allocate(12); // TypedArray header\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\n    checkMem();\n    U32[ ptr      >>> 2] = buf;        // .buffer\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\n    U32[ buf      >>> 2] = byteLength; // .byteLength\n    U32[(buf + 4) >>> 2] = 0;          // 0\n    if (view) {\n      new ctor(buffer, buf + 8, length).set(view);\n      if (view.length < length && !unsafe) {\n        let setLength = elementSize * view.length;\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\n      }\n    } else if (!unsafe) {\n      memory_fill(buf + 8, 0, byteLength);\n    }\n    return ptr;\n  }\n\n  baseModule.newArray = newArray;\n\n  /** Gets a view on a typed array in the module's memory by its pointer. */\n  function getArray(ctor, ptr) {\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    checkMem();\n    var buf        = U32[ ptr      >>> 2];\n    var byteOffset = U32[(ptr + 4) >>> 2];\n    var byteLength = U32[(ptr + 8) >>> 2];\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\n  }\n\n  baseModule.getArray = getArray;\n\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\n  function freeArray(ptr) {\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    memory_free(buf);\n    memory_free(ptr);\n  }\n\n  baseModule.freeArray = freeArray;\n\n  /**\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\n   * WebAssembly functions, i.e. as exported by the module, are supported.\n   */\n  function newFunction(fn) {\n    if (typeof fn.original === \"function\") fn = fn.original;\n    var index = table.length;\n    table.grow(1);\n    table.set(index, fn);\n    return index;\n  }\n\n  baseModule.newFunction = newFunction;\n\n  /** Gets a function by its pointer. */\n  function getFunction(ptr) {\n    return wrapFunction(table.get(ptr), setargc);\n  }\n\n  baseModule.getFunction = getFunction;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, Object.defineProperties(baseModule, {\n    I8: { get: function() { checkMem(); return I8; } },\n    U8: { get: function() { checkMem(); return U8; } },\n    I16: { get: function() { checkMem(); return I16; } },\n    U16: { get: function() { checkMem(); return U16; } },\n    I32: { get: function() { checkMem(); return I32; } },\n    U32: { get: function() { checkMem(); return U32; } },\n    I64: { get: function() { checkMem(); return I64; } },\n    U64: { get: function() { checkMem(); return U64; } },\n    F32: { get: function() { checkMem(); return F32; } },\n    F64: { get: function() { checkMem(); return F64; } }\n  }));\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\n  // hence we can't use the wrapper and instead need to provide a reference to the original\n  wrap.original = fn;\n  return wrap;\n}\n\n/** Instantiates an AssemblyScript module using the specified imports. */\nfunction instantiate(module, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(module, imports)\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\nasync function instantiateStreaming(response, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports._setargc || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {};\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[thisPtr]); },\n            set: function(value) { setter(this[thisPtr], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[thisPtr], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n",
    "/**\n * A value indicating how to repeat the pattern's image.\n */\nexport enum CanvasPatternRepetition {\n  /**\n   * A canvas pattern repetition indicating a repeating pattern in both the x and y directions.\n   */\n  repeat = 0,\n  /**\n   * A canvas pattern repetition indicating a repeating pattern only the x direction.\n   */\n  repeat_x = 1,\n  /**\n   * A canvas pattern repetition indicating a repeating pattern only the y direction.\n   */\n  repeat_y = 2,\n  /**\n   * A canvas pattern repetition indicationg no repeating pattern.\n   */\n  no_repeat = 3,\n}\n",
    "export enum FillRule {\n  nonzero = 0,\n  evenodd = 1,\n}\n",
    "export enum ImageSmoothingQuality {\n  low = 0,\n  medium = 1,\n  high = 2,\n}",
    "/**\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\n * of compositing operation to apply when drawing new shapes.\n */\nexport enum GlobalCompositeOperationValue {\n  /**\n   * This is the default setting and draws new shapes on top of the existing canvas content\n   */\n  \"source-over\" = 0,\n  /**\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\n   * Everything else is made transparent.\n   */\n  \"source-in\" = 1,\n  /**\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\n   */\n  \"source-out\" = 2,\n  /**\n   * The new shape is only drawn where it overlaps the existing canvas content.\n   */\n  \"source-atop\" = 3,\n  /**\n   * New shapes are drawn behind the existing canvas content.\n   */\n  \"destination-over\" = 4,\n  /**\n   * The existing canvas content is kept where both the new shape and existing canvas content\n   * overlap. Everything else is made transparent.\n   */\n  \"destination-in\" = 5,\n  /**\n   * The existing content is kept where it doesn't overlap the new shape.\n   */\n  \"destination-out\" = 6,\n  /**\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\n   * behind the canvas content.\n   */\n  \"destination-atop\" = 7,\n  /**\n   * Where both shapes overlap the color is determined by adding color values.\n   */\n  \"lighter\" = 8,\n  /**\n   * Only the new shape is shown.\n   */\n  \"copy\" = 9,\n  /**\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\n   */\n  \"xor\" = 10,\n  /**\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\n   * layer. A darker picture is the result.\n   */\n  \"multiply\" = 11,\n  /**\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\n   * (opposite of multiply)\n   */\n  \"screen\" = 12,\n  /**\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\n   * parts become lighter.\n   */\n  \"overlay\" = 13,\n  /**\n   * Retains the darkest pixels of both layers.\n   */\n  \"darken\" = 14,\n  /**\n   * Retains the lightest pixels of both layers.\n   */\n  \"lighten\" = 15,\n  /**\n   * Divides the bottom layer by the inverted top layer.\n   */\n  \"color-dodge\" = 16,\n  /**\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\n   */\n  \"color-burn\" = 17,\n  /**\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\n   */\n  \"hard-light\" = 18,\n  /**\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\n   */\n  \"soft-light\" = 19,\n  /**\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\n   * value.\n   */\n  \"difference\" = 20,\n  /**\n   * Like difference, but with lower contrast.\n   */\n  \"exclusion\" = 21,\n  /**\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\n   */\n  \"hue\" = 22,\n  /**\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\n   */\n  \"saturation\" = 23,\n  /**\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\n   */\n  \"color\" = 24,\n  /**\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\n   */\n  \"luminosity\" = 25,\n}\n",
    "/**\n * The CanvasRenderingContext2D.direction value of the Canvas 2D API specifies the current text\n * direction used to draw text onto the canvas.\n */\nexport enum CanvasDirection {\n  /**\n   * The text direction is left-to-right.\n   */\n  ltr = 0,\n  /**\n   * The text direction is right-to-left.\n   */\n  rtl = 1,\n  /**\n   * The text direction is inherited from the <canvas> element or the Document as appropriate. Default value.\n   */\n  inherit = 2,\n}\n",
    "/**\n * The TextAlign enum specifies the current text alignment used when drawing text.\n *\n * The alignment is relative to the x value of the fillText() method. For example, if textAlign is\n * \"center\", then the text's left edge will be at x - (textWidth / 2).\n */\nexport enum TextAlign {\n  /**\n   * The text is left-aligned.\n   **/\n  left = 0,\n  /**\n   * The text is right-aligned.\n   **/\n  right = 1,\n  /**\n   * The text is centered.\n   **/\n  center = 2,\n  /**\n   * The text is aligned at the normal start of the line (left-aligned for left-to-right locales, right-aligned for right-to-left locales).\n   **/\n  start = 3,\n  /**\n   * The text is aligned at the normal end of the line (right-aligned for left-to-right locales, left-aligned for right-to-left locales).\n   **/\n  end = 4,\n}\n",
    "/**\n * The TextBasline enum specifies the current text baseline used when drawing text.\n */\nexport enum TextBaseline {\n  /**\n   * The text baseline is the top of the em square.\n   **/\n  top = 0,\n  /**\n   * The text baseline is the hanging baseline. (Used by Tibetan and other Indic scripts.)\n   **/\n  hanging = 1,\n  /**\n   * The text baseline is the middle of the em square.\n   **/\n  middle = 2,\n  /**\n   * The text baseline is the normal alphabetic baseline. Default value.\n   **/\n  alphabetic = 3,\n  /**\n   * The text baseline is the ideographic baseline; this is the bottom of the body of the characters, if the main body of characters protrudes beneath the alphabetic baseline. (Used by Chinese, Japanese, and Korean scripts.)\n   **/\n  ideographic = 4,\n  /**\n   * The text baseline is the bottom of the bounding box. This differs from the ideographic baseline in that the ideographic baseline doesn't consider descenders.\n   **/\n  bottom = 5,\n}",
    "export enum LineCap {\n  butt = 0,\n  round = 1,\n  square = 2,\n}\n",
    "/**\n * The LineJoin enum responsible for setting the lineJoin property of the Canvas 2D API determines\n * the shape used to join two line segments where they meet.\n *\n * This property has no effect wherever two connected segments have the same direction, because no\n * joining area will be added in this case. Degenerate segments with a length of zero (i.e., with\n * all endpoints and control points at the exact same position) are also ignored.\n */\nexport enum LineJoin {\n  /**\n   * Rounds off the corners of a shape by filling an additional sector of disc centered at the\n   * common endpoint of connected segments. The radius for these rounded corners is equal to the\n   * line width.\n   */\n  bevel = 0,\n  /**\n   * Fills an additional triangular area between the common endpoint of connected segments, and the\n   * separate outside rectangular corners of each segment.\n   */\n  round = 1,\n  /**\n   * Connected segments are joined by extending their outside edges to connect at a single point,\n   * with the effect of filling an additional lozenge-shaped area. This setting is affected by the\n   * miterLimit property. Default value.\n   */\n  miter = 2,\n}",
    "import { ASUtil, instantiateBuffer, instantiate, instantiateStreaming } from \"assemblyscript/lib/loader\";\nimport { ICanvasSYS } from \"../util/ICanvasSYS\";\nimport { CanvasPatternRepetition } from \"../shared/CanvasPatternRepetition\";\nimport { CanvasInstruction } from \"../shared/CanvasInstruction\";\nimport { FillRule } from \"../shared/FillRule\";\nimport { ImageSmoothingQuality } from \"../shared/ImageSmoothingQuality\";\nimport { GlobalCompositeOperationValue } from \"../shared/GlobalCompositeOperationValue\";\nimport { CanvasDirection } from \"../shared/CanvasDirection\";\nimport { TextAlign } from \"../shared/TextAlign\";\nimport { TextBaseline } from \"../shared/TextBaseline\";\nimport { LineCap } from \"../shared/LineCap\";\nimport { LineJoin } from \"../shared/LineJoin\";\n\nconst bool = {\n  \"true\": 1,\n  \"false\": 0,\n};\n\nexport class AS2DGlue<T> {\n  public imports: any = null;\n  public wasm: (ASUtil & T & ICanvasSYS) | null = null;\n  private id: number = -1;\n\n  public instantiateBuffer(buffer: any, imports: any): ASUtil & T & ICanvasSYS {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = instantiateBuffer(buffer, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  public async instantiateStreaming(response: Promise<Response>, imports: any): Promise<ASUtil & T & ICanvasSYS> {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = await instantiateStreaming(response, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  public instantiate(module: any, imports: any): ASUtil & T & ICanvasSYS {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = instantiate(module, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  private hookImports(): void {\n    this.imports.__canvas_sys = {\n      addColorStop: this.addColorStop.bind(this),\n      createLinearGradient: this.createLinearGradient.bind(this),\n      createPattern: this.createPattern.bind(this),\n      createRadialGradient: this.createRadialGradient.bind(this),\n      disposeCanvasGradient: this.disposeCanvasGradient.bind(this),\n      disposeCanvasPattern: this.disposeCanvasPattern.bind(this),\n      disposeImage: this.disposeImage.bind(this),\n      isPointInPath: this.isPointInPath.bind(this),\n      isPointInStroke: this.isPointInStroke.bind(this),\n      loadImage: this.loadImage.bind(this),\n      measureText: this.measureText.bind(this),\n      render: this.render.bind(this),\n    };\n  }\n\n  private hookWasmApi(): void {\n    this.wasm!.contexts = {};\n    this.wasm!.gradients = {};\n    this.wasm!.images = {};\n    this.wasm!.loading = {};\n    this.wasm!.patterns = {};\n    this.wasm!.useContext = this.useContext.bind(this);\n  }\n\n  private useContext(name: string, ctx: CanvasRenderingContext2D): number {\n    this.id += 1;\n    this.wasm!.contexts[this.id] = ctx;\n    this.wasm!.__use_context(this.wasm!.newString(name), this.id);\n    return this.id;\n  }\n\n  private createLinearGradient(objid: number, x0: number, y0: number, x1: number, y1: number): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createLinearGradient(x0, y0, x1, y1);\n    return this.id;\n  }\n\n  private createRadialGradient(objid: number, x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createRadialGradient(x0, y0, r0, x1, y1, r1);\n    return this.id;\n  }\n\n  private addColorStop(objid: number, offset: number, color: number): void {\n    if (!this.wasm!.gradients[objid]) throw new Error(\"Cannot find gradient: \" + objid);\n    this.wasm!.gradients[objid].addColorStop(offset, this.wasm!.getString(color));\n  }\n\n  private loadImage(imgPointer: number, srcPointer: number): number {\n    var src: string = this.wasm!.getString(srcPointer);\n    this.id += 1;\n    var result: number = this.id;\n    this.wasm!.loading[result] = fetch(src)\n      .then(e => e.blob())\n      .then(createImageBitmap)\n      .then(e => {\n        this.wasm!.__image_loaded(imgPointer, e.width, e.height);\n        this.wasm!.images[result] = e;\n        return e;\n      });\n    return this.id;\n  }\n\n  private createPattern(cvsobjid: number, objid: number, repetition: CanvasPatternRepetition): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    if (!this.wasm!.images[objid]) throw new Error(\"Cannot find image: \" + objid);\n    this.wasm!.patterns[this.id] = this.wasm!.contexts[cvsobjid].createPattern(\n      this.wasm!.images[objid],\n      CanvasPatternRepetition[repetition].replace(\"_\", \"-\"),\n    )!;\n    return this.id;\n  }\n\n  public measureText(cvsobjid: number, text: number): number {\n    // The canvas exists, because render was already called\n    // if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    var ctx: CanvasRenderingContext2D = this.wasm!.contexts[cvsobjid];\n    return ctx.measureText(this.wasm!.getString(text)).width;\n  }\n\n  private render(cvsobjid: number, pointer: number): void {\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    var wasm: ASUtil & T & ICanvasSYS = this.wasm!;\n    var ctx: CanvasRenderingContext2D = wasm.contexts[cvsobjid];\n    var data = new Float64Array(wasm.memory.buffer, pointer, 0x10000);\n    var i = 0;\n    var strings: { [pointer: number]: string; } = {};\n    while (i < 0x10000 && data[i] !== CanvasInstruction.Commit) {\n      switch (data[i]) {\n        case CanvasInstruction.Arc: {\n          ctx.arc(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7] === 1);\n          break;\n        }\n        case CanvasInstruction.ArcTo: {\n          ctx.arcTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\n          break;\n        }\n        case CanvasInstruction.BeginPath: {\n          ctx.beginPath();\n          break;\n        }\n        case CanvasInstruction.BezierCurveTo: {\n          ctx.bezierCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\n          break;\n        }\n        case CanvasInstruction.Clip: {\n          ctx.clip();\n          break;\n        }\n        case CanvasInstruction.ClosePath: {\n          ctx.closePath();\n          break;\n        }\n        case CanvasInstruction.ClearRect: {\n          ctx.clearRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Direction: {\n          ctx.direction = CanvasDirection[data[i + 2]] as \"rtl\" | \"ltr\" | \"inherit\";\n          break;\n        }\n        case CanvasInstruction.DrawImage: {\n          ctx.drawImage(wasm.images[data[i + 2]], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9], data[i + 10]);\n          break;\n        }\n        case CanvasInstruction.Ellipse: {\n          ctx.ellipse(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9] === 1);\n          break;\n        }\n        case CanvasInstruction.Fill: {\n          ctx.fill(FillRule[data[i + 2]] as CanvasFillRule);\n          break;\n        }\n        case CanvasInstruction.FillGradient: {\n          ctx.fillStyle = wasm.gradients[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.FillPattern: {\n          ctx.fillStyle = wasm.patterns[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.FillRect: {\n          ctx.fillRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.FillStyle: {\n          ctx.fillStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.FillText: {\n          ctx.fillText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n          );\n          break;\n        }\n        case CanvasInstruction.FillTextWidth: {\n          ctx.fillText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n            data[i + 5],\n          );\n          break;\n        }\n        case CanvasInstruction.Filter: {\n          ctx.filter = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.Font: {\n          ctx.font = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.GlobalAlpha: {\n          ctx.globalAlpha = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.GlobalCompositeOperation: {\n          ctx.globalCompositeOperation = GlobalCompositeOperationValue[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.ImageSmoothingEnabled: {\n          ctx.imageSmoothingEnabled = data[i + 1] === 1;\n          break;\n        }\n        case CanvasInstruction.ImageSmoothingQuality: {\n          ctx.imageSmoothingQuality = ImageSmoothingQuality[data[i + 2]] as \"low\" | \"medium\" | \"high\";\n          break;\n        }\n        case CanvasInstruction.LineCap: {\n          ctx.lineCap = LineCap[data[i + 2]] as CanvasLineCap;\n          break;\n        }\n        case CanvasInstruction.LineDash: {\n          // @ts-ignore: Float64Array is not a valid TypedArrayConstructor, and setLineDash accepts Float64Array\n          ctx.setLineDash(wasm.getArray(Float64Array, data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.LineDashOffset: {\n          ctx.lineDashOffset = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.LineJoin: {\n          ctx.lineJoin = LineJoin[data[i + 2]] as CanvasLineJoin;\n          break;\n        }\n        case CanvasInstruction.LineTo: {\n          ctx.lineTo(data[i + 2], data[i + 3]);\n          break;\n        }\n        case CanvasInstruction.LineWidth: {\n          ctx.lineWidth = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.MiterLimit: {\n          ctx.miterLimit = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.MoveTo: {\n          ctx.moveTo(data[i + 2], data[i + 3]);\n          break;\n        }\n        case CanvasInstruction.QuadraticCurveTo: {\n          ctx.quadraticCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Rect: {\n          ctx.rect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Restore: {\n          ctx.restore();\n          break;\n        }\n        case CanvasInstruction.Save: {\n          ctx.save();\n          break;\n        }\n        case CanvasInstruction.SetTransform: {\n          ctx.setTransform(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\n          break;\n        }\n        case CanvasInstruction.ShadowBlur: {\n          ctx.shadowBlur = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.ShadowColor: {\n          ctx.shadowColor = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.ShadowOffsetX: {\n          ctx.shadowOffsetX = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.ShadowOffsetY: {\n          ctx.shadowOffsetY = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.Stroke: {\n          ctx.stroke();\n          break;\n        }\n        case CanvasInstruction.StrokeGradient: {\n          ctx.strokeStyle = wasm.gradients[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.StrokePattern: {\n          ctx.strokeStyle = wasm.patterns[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.StrokeRect: {\n          ctx.strokeRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.StrokeStyle: {\n          ctx.strokeStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.StrokeText: {\n          ctx.strokeText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n          );\n          break;\n        }\n        case CanvasInstruction.StrokeTextWidth: {\n          ctx.strokeText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n            data[i + 5],\n          );\n          break;\n        }\n        case CanvasInstruction.TextAlign: {\n          ctx.textAlign = TextAlign[data[i + 2]] as CanvasTextAlign;\n          break;\n        }\n        case CanvasInstruction.TextBaseline: {\n          ctx.textBaseline = TextBaseline[data[i + 2]] as CanvasTextBaseline;\n          break;\n        }\n      }\n      i = data[i + 1];\n    }\n  }\n\n  disposeCanvasPattern(id: number): void {\n    delete this.wasm!.patterns[id];\n  }\n\n  disposeImage(id: number): void {\n    delete this.wasm!.images[id];\n  }\n\n  disposeCanvasGradient(id: number): void {\n    delete this.wasm!.gradients[id];\n  }\n\n  isPointInPath(id: number, x: number, y: number, fillRule: FillRule): number {\n    return bool[(<any>this.wasm!.contexts[id]).isPointInPath(x, y, FillRule[fillRule]).toString() as \"true\" | \"false\"];\n  }\n\n  isPointInStroke(id: number, x: number, y: number): number {\n    return bool[(<any>this.wasm!.contexts[id]).isPointInStroke(x, y).toString() as \"true\" | \"false\"];\n  }\n}\n",
    "/**\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\n * of compositing operation to apply when drawing new shapes.\n */\nexport enum GlobalCompositeOperation {\n  /**\n   * This is the default setting and draws new shapes on top of the existing canvas content\n   */\n  source_over = 0,\n  /**\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\n   * Everything else is made transparent.\n   */\n  source_in = 1,\n  /**\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\n   */\n  source_out = 2,\n  /**\n   * The new shape is only drawn where it overlaps the existing canvas content.\n   */\n  source_atop = 3,\n  /**\n   * New shapes are drawn behind the existing canvas content.\n   */\n  destination_over = 4,\n  /**\n   * The existing canvas content is kept where both the new shape and existing canvas content\n   * overlap. Everything else is made transparent.\n   */\n  destination_in = 5,\n  /**\n   * The existing content is kept where it doesn't overlap the new shape.\n   */\n  destination_out = 6,\n  /**\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\n   * behind the canvas content.\n   */\n  destination_atop = 7,\n  /**\n   * Where both shapes overlap the color is determined by adding color values.\n   */\n  lighter = 8,\n  /**\n   * Only the new shape is shown.\n   */\n  copy = 9,\n  /**\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\n   */\n  xor = 10,\n  /**\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\n   * layer. A darker picture is the result.\n   */\n  multiply = 11,\n  /**\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\n   * (opposite of multiply)\n   */\n  screen = 12,\n  /**\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\n   * parts become lighter.\n   */\n  overlay = 13,\n  /**\n   * Retains the darkest pixels of both layers.\n   */\n  darken = 14,\n  /**\n   * Retains the lightest pixels of both layers.\n   */\n  lighten = 15,\n  /**\n   * Divides the bottom layer by the inverted top layer.\n   */\n  color_dodge = 16,\n  /**\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\n   */\n  color_burn = 17,\n  /**\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\n   */\n  hard_light = 18,\n  /**\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\n   */\n  soft_light = 19,\n  /**\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\n   * value.\n   */\n  difference = 20,\n  /**\n   * Like difference, but with lower contrast.\n   */\n  exclusion = 21,\n  /**\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\n   */\n  hue = 22,\n  /**\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\n   */\n  saturation = 23,\n  /**\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\n   */\n  color = 24,\n  /**\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\n   */\n  luminosity = 25,\n}\n",
    "import * as vm from \"./vm\";\n\nvm.init(1, function (state) {\n    console.log(\"state update\", state)\n}, true);\n\nvm.startGame();",
    "// this is a shallow wrapper for the assemblyscript loader\nimport {instantiateStreaming} from \"as2d\";\nimport {ASUtil} from \"assemblyscript/lib/loader\";\n\n\nconst env = {\n    memoryBase: 0,\n    tableBase: 0,\n    memory: new WebAssembly.Memory({\n        initial: 0\n    }),\n    abort(msg, file, line, column) {\n        console.error(\"abort called at \" + file + \":\" + line + \":\" + column + \", msg:\" + msg);\n    }\n};\n\nclass ASModuleWrapper {\n    module: ASUtil | null = null;\n\n    init(module: ASUtil): void {\n        this.module = module;\n    }\n\n    protected getString = (value) => {\n        if (this.module == null) {\n            return value;\n        } else {\n            return this.module.getString(value);\n        }\n    };\n\n    protected getArray = (type, value) => {\n        if (this.module == null) {\n            return value;\n        } else {\n            return this.module.getArray(type, value);\n        }\n    };\n}\n\n//function use array style for keep this ref.\n//see https://github.com/Microsoft/TypeScript/wiki/'this'-in-TypeScript\nclass Console extends ASModuleWrapper {\n\n    public log = (value) => {\n        console.log(this.getString(value));\n    };\n    public logf = (msg, value) => {\n        console.log(this.getString(msg), value)\n    };\n    public logi = (msg, value) => {\n        console.log(this.getString(msg), value)\n    };\n    public logAction = (msg, player, state) => {\n        console.log(this.getString(msg) + \" player:\", player, this.getArray(Int8Array, state))\n    };\n    public error = (value) => {\n        alert(this.getString(value));\n    };\n}\n\nclass Listener extends ASModuleWrapper {\n\n    public onUpdate = (player, state) => {\n        console.log(\"listener onUpdate\", player, this.getArray(Int8Array, state));\n    };\n\n    public onGameOver = (player) => {\n        console.log(\"listener onGameOver\", player);\n        alert(\"Game Over Winner is:\" + player);\n    }\n}\n\n\nconst engineConsole = new Console();\nconst guiConsole = new Console();\nconst listener = new Listener();\nlet module;\nlet promise;\n\nexport function init(playerRole: number, onStateUpdate: (state: Int8Array) => void, playWithAI: boolean = false, engineURL = \"/engine_optimized.wasm\", guiURL = \"/gui_optimized.wasm\") {\n    promise = instantiateStreaming(fetch(engineURL), {\n        env: env,\n        console: engineConsole,\n        listener: listener\n    }).then(engine => {\n        engineConsole.init(engine);\n        listener.init(engine);\n        engine.init();\n        return engine;\n    }).then(engine => {\n        return instantiateStreaming(fetch(guiURL), {\n                env: env, console: guiConsole, engine: {\n\n                    update(player, state) {\n                        let pointer = engine.newArray(module.getArray(Int8Array, state));\n                        return engine.update(player, pointer)\n                    },\n                    loadState(fullState) {\n                        let pointer = engine.newArray(module.getArray(Int8Array, fullState));\n                        engine.loadState(pointer)\n                    },\n                    getState() {\n                        let pointer = module.newArray(engine.getArray(Uint8Array, engine.getState()))\n                        return pointer\n                    },\n                    isGameOver() {\n                        return engine.isGameOver()\n                    }\n                }\n            }).then(gui => {\n                module = gui;\n                guiConsole.init(gui);\n                const canvas = document.querySelector(\"#as2d\");\n                const ctx = canvas.getContext(\"2d\");\n\n                ctx.canvas.addEventListener(\"click\", (e) => {\n                    let rect: ClientRect = (e.target as HTMLCanvasElement).getBoundingClientRect();\n                    let statePointer = gui.onClick(e.clientX - rect.left, e.clientY - rect.top);\n                    let state = gui.getArray(Int8Array, statePointer);\n                    if (state.length > 0) {\n                        onStateUpdate(state);\n                    }\n                });\n\n                gui.useContext(\"main\", ctx);\n                gui.init(playerRole, playWithAI);\n                gui.draw();\n            return gui\n            });\n\n        }\n    );\n    return promise;\n}\n\nexport async function startGame() {\n    let module = await promise;\n    module.startGame();\n}\n\nexport async function rivalUpdate(state: Int8Array) {\n    let module = await promise;\n    let pointer = module.newArray(state);\n    module.rivalUpdate(pointer);\n}\n\n",
    "import * as vm from \"./vm\";\n\nvm.init(1, function (state) {\n    console.log(\"state update\", state)\n}, true);\n\nvm.startGame();"
  ]
}