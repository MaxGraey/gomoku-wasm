{
  "version": 3,
  "sources": [
    "node_modules/as2d/node_modules/assemblyscript/lib/loader/index.js",
    "../../src/shared/CanvasPatternRepetition.ts",
    "../../src/shared/FillRule.ts",
    "../../src/shared/ImageSmoothingQuality.ts",
    "../../src/shared/GlobalCompositeOperationValue.ts",
    "../../src/shared/CanvasDirection.ts",
    "../../src/shared/TextAlign.ts",
    "../../src/shared/TextBaseline.ts",
    "../../src/shared/LineCap.ts",
    "../../src/shared/LineJoin.ts",
    "../../src/glue/AS2DGlue.ts",
    "../../src/shared/GlobalCompositeOperation.ts",
    "../src/index.ts",
    "gomoku.ts"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AKDA,AJAA,ACAA,ASAA,APAA,ADAA,AKAA,ACAA,AHAA,ACAA,APEA,IEFY,ACAA,AKAA,OAIX,CNDA,aCCA;ADJD,ACAA,AKAA,ARGA,WEHY,ACAA,AKAA,OAAO,CNAC,aCAa;AHIjC,GCFG,AMAA,CLDD,ACAA,AKAA,qCAAQ,CAAA,ONAG,CAAA,iBCAJ,CAAA;AFET,AMAA,AKDA,AZGA,GKFG,AMAA,APAA,CHAS,ACDV,ACAA,AKAA,ADCU,YAyBX,WNRA,gBOlBU,CAAA,AIAgC,KVA9B,CAAA,uBCAD,CAAA;AEEZ,AJDA,ACAA,ASCA,APAA,AGDA,AKCA,AZEA,CEHC,EAHW,CGIA,AMAA,APAA,ADDV,AKAA,KICc,EXDJ,ACHQ,AKGR,GLHA,KGiBX,IEduB,GKCS,CAAI,CDgHpC,ETpHmB,GEoHnB,AQhHkD,CXDhB,CCHvB,AUIyC,OAAiB,GJD1D,CAAA,KNHQ,QAGnB,UCAS,CAAA;AECV,AMAA,APAA,ADAA,AKAA,ARGA,CGHC,AKAA,ELJW,AKAA,AFKT,CLDD,AMAA,AKAmD,MJJlC,CHIP,AMAA,APAA,EIJA,WLAqB,EEIN,CFJf,CKAO,AIIkC,EAAA,GJJzC,EGIwB,KPAK,EQA6B,MJJnD,QLAc,AKIhC,KLJW,6BAAqB,QAIhC;AGED,ANEA,IKHE,AMAA,APAA,AECU,AMDV,IAAI,IAAI,CNsBT,EMtByB,IAAI,mBAAQ,EAAE,CAAC;ANCzC,ANGA,GSFG,CGDD,GXAG,CMAC,GDAM,AMAH,IAAI,CAAC,INAO,aMAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AHEjD,AGDA,AZGA,CYHC,GXAC,AQCU,AHDV,ACAA,GFAG,AMAA,APAA,KKmBJ,qCFnBQ,CAAA,2BNAG,CAAA;AQCZ,AGJA,AZOA,IKHE,AJAA,AUAA,APAA,AGAA,OEAU,QAAQ,2BGDnB,SPCQ,CAAA,iCMAQ,CAAA,SPAE,CAAA;AQCnB,AZGA,IKHE,AMAA,APAA,AKAA,IHAI,CMAU,WAAW,CAAI,GAAQ,EAAE,OAAiB;AZI1D,IMHE,AMDuC,GXCpC,CMAC,oBKDmC,EAAA,YAAiB,GNChD,CAAA;ANIV,ICHE,AKAA,ACAA,AKDA,GPCG,CODC,IAAI,GAAgB,IAAI,mBAAQ,EAAE,CAAC,gBLC5B,CAAA,uBNAC,CAAA;ADId,IKHE,AJAA,AMAA,AKDA,GDCG,APAA,IQDI,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,aPC/B,CAAA;AOAT,AZIA,CYJC,GPCC,AMAA,APAA,GKAG,CHAC,6EKAS,CAAA,SPAE,CAAA;AQJjB,AZQA,IWHE,APAA,AKAA,AHAA,GLAG,CMAC,0BKFL,WHEU,CAAA,CHAA,CAAA;AMAX,AZIA,ICHE,AQAA,AHAA,ACAA,GFAG,EODW,oBAAoB,CAAI,QAA2B,EAAE,OAAiB,QLC1E,CAAA,yBNAE,CAAA;ADId,IKHE,AJAA,AMAA,AKFmE,GDEhE,APAA,qBQFgE,EAAA,YAAiB,qBPEzE,CAAA;AACb,ALGA,CKHC,EAbW,CMaV,APAA,AQFA,INEI,AMFA,IAAI,GAAgB,GPXC,COWG,EPXlB,iBOW0B,EAAE,CAAC,GPXd,KAAf,uBAAe,QAa1B,OMAe,CAAA,SPAE,CAAA;AJIlB,IWHE,APAA,AEAA,AMFA,GXEG,AQAA,CFAC,GKFG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,ENEjC,CAAA,IMFwC,CAAC,CAAC;AACtD,AZKA,CYLC,GXEC,AQAA,AHAA,ACAA,yCEAS,CAAA,iBFAK,CAAA,mBNAD,CAAA;AACf,AWNA,AZSA,CCHC,EAjBW,CQiBV,AFAA,GIAG,APAA,mBHjB8B,GAAvB,uBWcX,QXdkC,KAAvB,+BAAuB,QAiBlC;AWDD,AZKA,IWHE,APAA,IEAI,6BMF0B,oDDEf,CAAA,SPAE,CAAA;AQAnB,AZIA,IWHE,APAA,AEAA,ICAI,sCKDmC,CNC9B,CAAA;AMAX,AZIA,IMHE,ACAA,4CKDyC,iBLC1B,CAAA;AKAjB,AZIA,IOHE,GIAG,APAA,AKAA,+CGD4C;AACjD,AZIA,IWHE,APAA,AKAA,IHAI,+BMD4B,MHCvB,CAAA,qDEAW,CAAA,SPAE,CAAA;AKCxB,AGDA,AZIA,CSHC,EAlBW,CEkBV,APAA,AEAA,ICAI,GElBc,GAAR,gBAAQ,KAAR,QHkBH,CAAA,OGlBW,IGiB8B,IHCjD;AHCD,AMDA,AZIA,CMHC,EArBW,CCqBV,AM3BF,QPMqB,GAAT,iBAAS,KAAT,iBAAS,CCqBT,CAAA,IKD2C,ENCtD;ACCD,AKDA,AZIA,COHC,EAzBW,YAAY,GAAZ,oBAAY,KAAZ,SKwBmC,WLxBvB,QAyBvB;AKAD,AC3BA,Ab+BA,Ia/BA,GF4BK,APAA,GS5BL,GAAA,OAAA,CAAA,MAAA,CAAA,UD2BiC;AACjC,AZIA,IWHE,APAA,mCQDgC,wDDCd,CAAA,SPAE,CAAA;AQAtB,ACzBA,Ab6BA,IWHE,APAA,AS1BI,GAAG,GAAG,8BDyBuB;AACnC,ACzBI,Ab6BJ,Ea7BI,UAAU,EAAE,CADJ,4BD0B0B;ACxBlC,Ab6BJ,Ea7BI,KF0BC,APAA,IS1BQ,EAAE,CAFH;AHLZ,AGQI,Ab6BJ,Ea7BI,EF0BF,APAA,IS1BQ,EAAE,IAAI,WAAW,CAAC,MAAhB,CAAuB,mBHRsE,6CCkCpF,CAAA,SPAE,CAAA;AMhCvB,AGOQ,Ab6BR,IWHE,APAA,AS1BM,OAAO,EAAE,gEHP2D;AAE5E,AGImC,Ab+BnC,Ga/BY,CAHA,2CHDkC;AAC9C,AGMI,Ab6BJ,Ea7BI,KAAK,EAAA,eAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,MAAlB,EAAwB,wBHNuC;AACxE,AGMQ,Ab6BR,Ia7BQ,GF0BH,APAA,IS1BU,CAAC,KAAR,CAAc,qBAAqB,IAArB,GAA4B,GAA5B,GAAkC,IAAlC,GAAyC,GAAzC,GAA+C,MAA/C,GAAwD,QAAxD,GAAmE,GAAjF,CHNgF;AACxF,AGMK,Ab6BL,IWHE,APAA,yDMhC0D,sCCgCtC,CAAA,SPAE,CAAA;AM/BxB,AGHY,AbsCZ,CatCA,GFmCE,APAA,6CMhC8C;AAChD,AVmCA,uDUnCsD;AACtD,AGMA,Ab6BA,Ia7BA,GF0BK,APAA,YS1BL,0BHN4C;AAC5C,AGKA,Ab8BA,IWHE,APAA,2CMhC4C,kCCgCjC,CAAA,SPAE,CAAA;AM9Bf,AGGA,Ab+BA,IWHE,APAA,QS5BF;AAAA,AbgCA,IUnCA,OGGA,eAAA,GAAA;AAAA,AbiCA,OWHK,APAA,CMhCI,AGET,KAAA,GAAA,IHFgB,AGEhB,GHFwB,IAAI,CAAC;AVoC7B,IWHE,APAA,IMhCO,SAAI,GAAqC,IAAI,CAAC,kDCgC7C,CAAA,SPAE,CAAA;AS9BR,AbkCJ,IWHE,APAA,IMhCQ,CGCN,MHDQ,AGCR,GHDmB,AGCK,CHDJ,CAAC,CAAC,CGCtB;AbmCJ,IUyTA,CAAC;AGtVa,Ab8Bd,IUnCS,GCgCJ,APAA,ES3BS,SAAA,GAAY,UAAC,KAAD,EAAM,EHLN,GAAxB,UAAyB,MAAW,EAAE,OAAY;AGM5C,Ab8BR,IWHE,APAA,IMhCE,EGKQ,EHLJ,CAAC,EGKO,CAAC,IHLD,EGKJ,CHLO,GGKQ,IHLD,AGKlB,CHLmB,CGKM,0CF2BvB,CAAA,SPAE,CAAA;AS1BA,Ab8BZ,IWHE,APAA,IMhCE,IAAI,CAAC,EGKU,KAAP,IHLQ,EAAE,CAAC;AGMd,Ab8BT,OahCQ,CHHJ,IAAI,CAAC,AGKM,IHLF,GAAG,0BAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAQ,CAAC;AGMnD,Ab8BZ,QUnCI,IAAI,CAAC,EGKU,KAAI,CAAC,GHLJ,EAAE,CAAC,AGKJ,CAAY,SAAZ,CAAsB,KAAtB,CAAP;AACH,Ab8BT,OWHK,APAA,CMhCD,OAAO,IAAI,CAAC,IAAK,CAAC;AGMjB,Ab8BL,IUnCE,ACgCA,APAA,CMhCC,AGDW,+EFiCC,CAAA,SPAE,CAAA;AJIjB,IUlCe,AC+Bb,APAA,uCM/BiC,GAAjC,UAAkC,QAA2B,EAAE,OAAY;AGK/D,Ab8Bd,Sa9Bc,QAAA,GAAW,UAAC,IAAD,EAAO,KAAP,EAAY;AAC7B,Ab8BR,Ua9BY,KAAI,CAAC,MAAL,IAAe,IAAnB,EAAyB;AACrB,Ab8BZ,OWHK,APAA,QS3Bc,KAAP;AACH,Ab8BT,IWHE,APAA,GS7BM,MAEO,mEF2BF,CAAA,SPAE,CAAA;AS1BH,Ab8BZ,IWHE,APAA,WS3BiB,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,EAA2B,KAA3B,CAAP;AACH,Ab8BT,wBUvCI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AGUtB,Ab8BL,KapCc,mBHHV,IAAI,CAAC,WAAW,EAAE,CAAC;AGUtB,Ab8BD,OWHK,APAA,iBMpCD,KAAA,IAAI,CAAA;AVwCR,IWHE,APAA,oBMrCc,qBAAM,6BAAoB,CAAC,OCqC7B,CDrCqC,ACqCrC,EDrCuC,IAAI,CAAC,ENqC1C,CAAA,IMrCiD,CAAC,EAAA;AGV9D,AbmDJ,EanDI,EFgDF,APAA,aShDE,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,MAAL,EAAmB;AACf,AbmDR,SanDa,MAAL,GAAc,MHSlB,AGTI,GHSC,IAAI,IAAG,SAAyD,CAAA,CAAC;AGRrE,AbmDL,GarDI,IFkDC,APAA,iBMvCD,IAAI,CAAC,WAAW,EAAE,CAAC;AV2CvB,IWHE,APAA,oBMvCE,sBAAO,IAAI,CAAC,IAAK,EAAC,uBCuCT,CAAA,SPAE,CAAA;AShCf,AboCA,IWHE,APAA,KSjCF,eAAA;AAtBA,Ab2DA,Ca3DA,EAAA,EAwBA;AACA,AbmCA,OWHK,APAA;AJIL,IWHE,APAA,CM1CC,6EC0CW,CAAA,SPAE,CAAA;AJIhB,IU5CS,ACyCP,APAA,8BMzCkB,GAAlB,UAAmB,MAAW,EAAE,OAAY;AGQ9C,AbqCA,IarCA,IHPI,GGOJ,CHPQ,CAAC,OAAO,GAAG,OAAO,CAAC;AGO3B,AbsCA,OWHK,APAA,CMzCD,IAAI,CAAC,WAAW,EAAE,CAAC;AGMvB,AbuCA,IWHE,APAA,IMzCE,EGKJ,EHLQ,CAAC,GGKT,CHLa,CGKb,EHLgB,oBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAQ,CAAC,2BCyCvC,CAAA,SPAE,CAAA;ASpCE,AbwCtB,EaxCsB,EFqCpB,APAA,IMzCE,GGIkB,CHJd,AGIc,CHJb,MGIa,EAAA,GHJF,EAAE,CAAC,AGID,CAAA;AbyCtB,QU5CI,OAAO,IAAI,CAAC,IAAK,CAAC;AGGtB,Ab0CA,IU5CE,CAAC,ECyCE,APAA,ISvCL,OAAA,GAAA;AAAA,Ab2CA,IU3CU,ACwCR,APAA,ISxCF,KAAA,GAAA,MAAA,KAAA,IAAA,GHAqB,CGArB,EHAE,IGAF,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,gBFwCiB,CAAA,SPAE,CAAA;AJInB,IWHE,APAA,IMxCE,IAAI,CAAC,OAAO,CAAC,YAAY,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",
  "file": "gomoku.ce385d33.js",
  "sourceRoot": "..",
  "sourcesContent": [
    "\"use strict\";\n\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\nconst thisPtr = Symbol();\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(U32, U16, ptr) {\n  var dataLength = U32[ptr >>> 2];\n  var dataOffset = (ptr + 4) >>> 1;\n  var dataRemain = dataLength;\n  var parts = [];\n  const chunkSize = 1024;\n  while (dataRemain > chunkSize) {\n    let last = U16[dataOffset + chunkSize - 1];\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\n    let part = U16.subarray(dataOffset, dataOffset += size);\n    parts.push(String.fromCharCode.apply(String, part));\n    dataRemain -= size;\n  }\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  var baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    var buffer = memory.buffer;\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  var env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    var memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  var rawExports = instance.exports;\n  var memory = rawExports.memory;\n  var memory_allocate = rawExports[\"memory.allocate\"];\n  var memory_fill = rawExports[\"memory.fill\"];\n  var memory_free = rawExports[\"memory.free\"];\n  var table = rawExports.table;\n  var setargc = rawExports._setargc || function() {};\n\n  // Provide views for all sorts of basic values\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\n\n  /** Updates memory views if memory has grown meanwhile. */\n  function checkMem() {\n    // see: https://github.com/WebAssembly/design/issues/1210\n    if (buffer !== memory.buffer) {\n      buffer = memory.buffer;\n      I8  = new Int8Array(buffer);\n      U8  = new Uint8Array(buffer);\n      I16 = new Int16Array(buffer);\n      U16 = new Uint16Array(buffer);\n      I32 = new Int32Array(buffer);\n      U32 = new Uint32Array(buffer);\n      if (hasBigInt64) {\n        I64 = new BigInt64Array(buffer);\n        U64 = new BigUint64Array(buffer);\n      }\n      F32 = new Float32Array(buffer);\n      F64 = new Float64Array(buffer);\n    }\n  }\n  checkMem();\n\n  /** Allocates a new string in the module's memory and returns its pointer. */\n  function newString(str) {\n    var dataLength = str.length;\n    var ptr = memory_allocate(4 + (dataLength << 1));\n    var dataOffset = (4 + ptr) >>> 1;\n    checkMem();\n    U32[ptr >>> 2] = dataLength;\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.newString = newString;\n\n  /** Gets a string from the module's memory by its pointer. */\n  function getString(ptr) {\n    checkMem();\n    return getStringImpl(U32, U16, ptr);\n  }\n\n  baseModule.getString = getString;\n\n  function computeBufferSize(byteLength) {\n    const HEADER_SIZE = 8;\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\n  }\n\n  /** Creates a new typed array in the module's memory and returns its pointer. */\n  function newArray(view, length, unsafe) {\n    var ctor = view.constructor;\n    if (ctor === Function) { // TypedArray constructor created in memory\n      ctor = view;\n      view = null;\n    } else { // TypedArray instance copied into memory\n      if (length === undefined) length = view.length;\n    }\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    var byteLength = elementSize * length;\n    var ptr = memory_allocate(12); // TypedArray header\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\n    checkMem();\n    U32[ ptr      >>> 2] = buf;        // .buffer\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\n    U32[ buf      >>> 2] = byteLength; // .byteLength\n    U32[(buf + 4) >>> 2] = 0;          // 0\n    if (view) {\n      new ctor(buffer, buf + 8, length).set(view);\n      if (view.length < length && !unsafe) {\n        let setLength = elementSize * view.length;\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\n      }\n    } else if (!unsafe) {\n      memory_fill(buf + 8, 0, byteLength);\n    }\n    return ptr;\n  }\n\n  baseModule.newArray = newArray;\n\n  /** Gets a view on a typed array in the module's memory by its pointer. */\n  function getArray(ctor, ptr) {\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    checkMem();\n    var buf        = U32[ ptr      >>> 2];\n    var byteOffset = U32[(ptr + 4) >>> 2];\n    var byteLength = U32[(ptr + 8) >>> 2];\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\n  }\n\n  baseModule.getArray = getArray;\n\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\n  function freeArray(ptr) {\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    memory_free(buf);\n    memory_free(ptr);\n  }\n\n  baseModule.freeArray = freeArray;\n\n  /**\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\n   * WebAssembly functions, i.e. as exported by the module, are supported.\n   */\n  function newFunction(fn) {\n    if (typeof fn.original === \"function\") fn = fn.original;\n    var index = table.length;\n    table.grow(1);\n    table.set(index, fn);\n    return index;\n  }\n\n  baseModule.newFunction = newFunction;\n\n  /** Gets a function by its pointer. */\n  function getFunction(ptr) {\n    return wrapFunction(table.get(ptr), setargc);\n  }\n\n  baseModule.getFunction = getFunction;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, Object.defineProperties(baseModule, {\n    I8: { get: function() { checkMem(); return I8; } },\n    U8: { get: function() { checkMem(); return U8; } },\n    I16: { get: function() { checkMem(); return I16; } },\n    U16: { get: function() { checkMem(); return U16; } },\n    I32: { get: function() { checkMem(); return I32; } },\n    U32: { get: function() { checkMem(); return U32; } },\n    I64: { get: function() { checkMem(); return I64; } },\n    U64: { get: function() { checkMem(); return U64; } },\n    F32: { get: function() { checkMem(); return F32; } },\n    F64: { get: function() { checkMem(); return F64; } }\n  }));\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\n  // hence we can't use the wrapper and instead need to provide a reference to the original\n  wrap.original = fn;\n  return wrap;\n}\n\n/** Instantiates an AssemblyScript module using the specified imports. */\nfunction instantiate(module, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(module, imports)\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\nasync function instantiateStreaming(response, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports._setargc || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {};\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[thisPtr]); },\n            set: function(value) { setter(this[thisPtr], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[thisPtr], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n",
    "/**\n * A value indicating how to repeat the pattern's image.\n */\nexport enum CanvasPatternRepetition {\n  /**\n   * A canvas pattern repetition indicating a repeating pattern in both the x and y directions.\n   */\n  repeat = 0,\n  /**\n   * A canvas pattern repetition indicating a repeating pattern only the x direction.\n   */\n  repeat_x = 1,\n  /**\n   * A canvas pattern repetition indicating a repeating pattern only the y direction.\n   */\n  repeat_y = 2,\n  /**\n   * A canvas pattern repetition indicationg no repeating pattern.\n   */\n  no_repeat = 3,\n}\n",
    "export enum FillRule {\n  nonzero = 0,\n  evenodd = 1,\n}\n",
    "export enum ImageSmoothingQuality {\n  low = 0,\n  medium = 1,\n  high = 2,\n}",
    "/**\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\n * of compositing operation to apply when drawing new shapes.\n */\nexport enum GlobalCompositeOperationValue {\n  /**\n   * This is the default setting and draws new shapes on top of the existing canvas content\n   */\n  \"source-over\" = 0,\n  /**\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\n   * Everything else is made transparent.\n   */\n  \"source-in\" = 1,\n  /**\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\n   */\n  \"source-out\" = 2,\n  /**\n   * The new shape is only drawn where it overlaps the existing canvas content.\n   */\n  \"source-atop\" = 3,\n  /**\n   * New shapes are drawn behind the existing canvas content.\n   */\n  \"destination-over\" = 4,\n  /**\n   * The existing canvas content is kept where both the new shape and existing canvas content\n   * overlap. Everything else is made transparent.\n   */\n  \"destination-in\" = 5,\n  /**\n   * The existing content is kept where it doesn't overlap the new shape.\n   */\n  \"destination-out\" = 6,\n  /**\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\n   * behind the canvas content.\n   */\n  \"destination-atop\" = 7,\n  /**\n   * Where both shapes overlap the color is determined by adding color values.\n   */\n  \"lighter\" = 8,\n  /**\n   * Only the new shape is shown.\n   */\n  \"copy\" = 9,\n  /**\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\n   */\n  \"xor\" = 10,\n  /**\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\n   * layer. A darker picture is the result.\n   */\n  \"multiply\" = 11,\n  /**\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\n   * (opposite of multiply)\n   */\n  \"screen\" = 12,\n  /**\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\n   * parts become lighter.\n   */\n  \"overlay\" = 13,\n  /**\n   * Retains the darkest pixels of both layers.\n   */\n  \"darken\" = 14,\n  /**\n   * Retains the lightest pixels of both layers.\n   */\n  \"lighten\" = 15,\n  /**\n   * Divides the bottom layer by the inverted top layer.\n   */\n  \"color-dodge\" = 16,\n  /**\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\n   */\n  \"color-burn\" = 17,\n  /**\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\n   */\n  \"hard-light\" = 18,\n  /**\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\n   */\n  \"soft-light\" = 19,\n  /**\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\n   * value.\n   */\n  \"difference\" = 20,\n  /**\n   * Like difference, but with lower contrast.\n   */\n  \"exclusion\" = 21,\n  /**\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\n   */\n  \"hue\" = 22,\n  /**\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\n   */\n  \"saturation\" = 23,\n  /**\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\n   */\n  \"color\" = 24,\n  /**\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\n   */\n  \"luminosity\" = 25,\n}\n",
    "/**\n * The CanvasRenderingContext2D.direction value of the Canvas 2D API specifies the current text\n * direction used to draw text onto the canvas.\n */\nexport enum CanvasDirection {\n  /**\n   * The text direction is left-to-right.\n   */\n  ltr = 0,\n  /**\n   * The text direction is right-to-left.\n   */\n  rtl = 1,\n  /**\n   * The text direction is inherited from the <canvas> element or the Document as appropriate. Default value.\n   */\n  inherit = 2,\n}\n",
    "/**\n * The TextAlign enum specifies the current text alignment used when drawing text.\n *\n * The alignment is relative to the x value of the fillText() method. For example, if textAlign is\n * \"center\", then the text's left edge will be at x - (textWidth / 2).\n */\nexport enum TextAlign {\n  /**\n   * The text is left-aligned.\n   **/\n  left = 0,\n  /**\n   * The text is right-aligned.\n   **/\n  right = 1,\n  /**\n   * The text is centered.\n   **/\n  center = 2,\n  /**\n   * The text is aligned at the normal start of the line (left-aligned for left-to-right locales, right-aligned for right-to-left locales).\n   **/\n  start = 3,\n  /**\n   * The text is aligned at the normal end of the line (right-aligned for left-to-right locales, left-aligned for right-to-left locales).\n   **/\n  end = 4,\n}\n",
    "/**\n * The TextBasline enum specifies the current text baseline used when drawing text.\n */\nexport enum TextBaseline {\n  /**\n   * The text baseline is the top of the em square.\n   **/\n  top = 0,\n  /**\n   * The text baseline is the hanging baseline. (Used by Tibetan and other Indic scripts.)\n   **/\n  hanging = 1,\n  /**\n   * The text baseline is the middle of the em square.\n   **/\n  middle = 2,\n  /**\n   * The text baseline is the normal alphabetic baseline. Default value.\n   **/\n  alphabetic = 3,\n  /**\n   * The text baseline is the ideographic baseline; this is the bottom of the body of the characters, if the main body of characters protrudes beneath the alphabetic baseline. (Used by Chinese, Japanese, and Korean scripts.)\n   **/\n  ideographic = 4,\n  /**\n   * The text baseline is the bottom of the bounding box. This differs from the ideographic baseline in that the ideographic baseline doesn't consider descenders.\n   **/\n  bottom = 5,\n}",
    "export enum LineCap {\n  butt = 0,\n  round = 1,\n  square = 2,\n}\n",
    "/**\n * The LineJoin enum responsible for setting the lineJoin property of the Canvas 2D API determines\n * the shape used to join two line segments where they meet.\n *\n * This property has no effect wherever two connected segments have the same direction, because no\n * joining area will be added in this case. Degenerate segments with a length of zero (i.e., with\n * all endpoints and control points at the exact same position) are also ignored.\n */\nexport enum LineJoin {\n  /**\n   * Rounds off the corners of a shape by filling an additional sector of disc centered at the\n   * common endpoint of connected segments. The radius for these rounded corners is equal to the\n   * line width.\n   */\n  bevel = 0,\n  /**\n   * Fills an additional triangular area between the common endpoint of connected segments, and the\n   * separate outside rectangular corners of each segment.\n   */\n  round = 1,\n  /**\n   * Connected segments are joined by extending their outside edges to connect at a single point,\n   * with the effect of filling an additional lozenge-shaped area. This setting is affected by the\n   * miterLimit property. Default value.\n   */\n  miter = 2,\n}",
    "import { ASUtil, instantiateBuffer, instantiate, instantiateStreaming } from \"assemblyscript/lib/loader\";\nimport { ICanvasSYS } from \"../util/ICanvasSYS\";\nimport { CanvasPatternRepetition } from \"../shared/CanvasPatternRepetition\";\nimport { CanvasInstruction } from \"../shared/CanvasInstruction\";\nimport { FillRule } from \"../shared/FillRule\";\nimport { ImageSmoothingQuality } from \"../shared/ImageSmoothingQuality\";\nimport { GlobalCompositeOperationValue } from \"../shared/GlobalCompositeOperationValue\";\nimport { CanvasDirection } from \"../shared/CanvasDirection\";\nimport { TextAlign } from \"../shared/TextAlign\";\nimport { TextBaseline } from \"../shared/TextBaseline\";\nimport { LineCap } from \"../shared/LineCap\";\nimport { LineJoin } from \"../shared/LineJoin\";\n\nconst bool = {\n  \"true\": 1,\n  \"false\": 0,\n};\n\nexport class AS2DGlue<T> {\n  public imports: any = null;\n  public wasm: (ASUtil & T & ICanvasSYS) | null = null;\n  private id: number = -1;\n\n  public instantiateBuffer(buffer: any, imports: any): ASUtil & T & ICanvasSYS {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = instantiateBuffer(buffer, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  public async instantiateStreaming(response: Promise<Response>, imports: any): Promise<ASUtil & T & ICanvasSYS> {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = await instantiateStreaming(response, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  public instantiate(module: any, imports: any): ASUtil & T & ICanvasSYS {\n    this.imports = imports;\n    this.hookImports();\n    this.wasm = instantiate(module, this.imports) as any;\n    this.hookWasmApi();\n    return this.wasm!;\n  }\n\n  private hookImports(): void {\n    this.imports.__canvas_sys = {\n      addColorStop: this.addColorStop.bind(this),\n      createLinearGradient: this.createLinearGradient.bind(this),\n      createPattern: this.createPattern.bind(this),\n      createRadialGradient: this.createRadialGradient.bind(this),\n      disposeCanvasGradient: this.disposeCanvasGradient.bind(this),\n      disposeCanvasPattern: this.disposeCanvasPattern.bind(this),\n      disposeImage: this.disposeImage.bind(this),\n      isPointInPath: this.isPointInPath.bind(this),\n      isPointInStroke: this.isPointInStroke.bind(this),\n      loadImage: this.loadImage.bind(this),\n      measureText: this.measureText.bind(this),\n      render: this.render.bind(this),\n    };\n  }\n\n  private hookWasmApi(): void {\n    this.wasm!.contexts = {};\n    this.wasm!.gradients = {};\n    this.wasm!.images = {};\n    this.wasm!.loading = {};\n    this.wasm!.patterns = {};\n    this.wasm!.useContext = this.useContext.bind(this);\n  }\n\n  private useContext(name: string, ctx: CanvasRenderingContext2D): number {\n    this.id += 1;\n    this.wasm!.contexts[this.id] = ctx;\n    this.wasm!.__use_context(this.wasm!.newString(name), this.id);\n    return this.id;\n  }\n\n  private createLinearGradient(objid: number, x0: number, y0: number, x1: number, y1: number): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createLinearGradient(x0, y0, x1, y1);\n    return this.id;\n  }\n\n  private createRadialGradient(objid: number, x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createRadialGradient(x0, y0, r0, x1, y1, r1);\n    return this.id;\n  }\n\n  private addColorStop(objid: number, offset: number, color: number): void {\n    if (!this.wasm!.gradients[objid]) throw new Error(\"Cannot find gradient: \" + objid);\n    this.wasm!.gradients[objid].addColorStop(offset, this.wasm!.getString(color));\n  }\n\n  private loadImage(imgPointer: number, srcPointer: number): number {\n    var src: string = this.wasm!.getString(srcPointer);\n    this.id += 1;\n    var result: number = this.id;\n    this.wasm!.loading[result] = fetch(src)\n      .then(e => e.blob())\n      .then(createImageBitmap)\n      .then(e => {\n        this.wasm!.__image_loaded(imgPointer, e.width, e.height);\n        this.wasm!.images[result] = e;\n        return e;\n      });\n    return this.id;\n  }\n\n  private createPattern(cvsobjid: number, objid: number, repetition: CanvasPatternRepetition): number {\n    this.id += 1;\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    if (!this.wasm!.images[objid]) throw new Error(\"Cannot find image: \" + objid);\n    this.wasm!.patterns[this.id] = this.wasm!.contexts[cvsobjid].createPattern(\n      this.wasm!.images[objid],\n      CanvasPatternRepetition[repetition].replace(\"_\", \"-\"),\n    )!;\n    return this.id;\n  }\n\n  public measureText(cvsobjid: number, text: number): number {\n    // The canvas exists, because render was already called\n    // if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    var ctx: CanvasRenderingContext2D = this.wasm!.contexts[cvsobjid];\n    return ctx.measureText(this.wasm!.getString(text)).width;\n  }\n\n  private render(cvsobjid: number, pointer: number): void {\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\n    var wasm: ASUtil & T & ICanvasSYS = this.wasm!;\n    var ctx: CanvasRenderingContext2D = wasm.contexts[cvsobjid];\n    var data = new Float64Array(wasm.memory.buffer, pointer, 0x10000);\n    var i = 0;\n    var strings: { [pointer: number]: string; } = {};\n    while (i < 0x10000 && data[i] !== CanvasInstruction.Commit) {\n      switch (data[i]) {\n        case CanvasInstruction.Arc: {\n          ctx.arc(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7] === 1);\n          break;\n        }\n        case CanvasInstruction.ArcTo: {\n          ctx.arcTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\n          break;\n        }\n        case CanvasInstruction.BeginPath: {\n          ctx.beginPath();\n          break;\n        }\n        case CanvasInstruction.BezierCurveTo: {\n          ctx.bezierCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\n          break;\n        }\n        case CanvasInstruction.Clip: {\n          ctx.clip();\n          break;\n        }\n        case CanvasInstruction.ClosePath: {\n          ctx.closePath();\n          break;\n        }\n        case CanvasInstruction.ClearRect: {\n          ctx.clearRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Direction: {\n          ctx.direction = CanvasDirection[data[i + 2]] as \"rtl\" | \"ltr\" | \"inherit\";\n          break;\n        }\n        case CanvasInstruction.DrawImage: {\n          ctx.drawImage(wasm.images[data[i + 2]], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9], data[i + 10]);\n          break;\n        }\n        case CanvasInstruction.Ellipse: {\n          ctx.ellipse(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9] === 1);\n          break;\n        }\n        case CanvasInstruction.Fill: {\n          ctx.fill(FillRule[data[i + 2]] as CanvasFillRule);\n          break;\n        }\n        case CanvasInstruction.FillGradient: {\n          ctx.fillStyle = wasm.gradients[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.FillPattern: {\n          ctx.fillStyle = wasm.patterns[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.FillRect: {\n          ctx.fillRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.FillStyle: {\n          ctx.fillStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.FillText: {\n          ctx.fillText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n          );\n          break;\n        }\n        case CanvasInstruction.FillTextWidth: {\n          ctx.fillText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n            data[i + 5],\n          );\n          break;\n        }\n        case CanvasInstruction.Filter: {\n          ctx.filter = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.Font: {\n          ctx.font = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.GlobalAlpha: {\n          ctx.globalAlpha = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.GlobalCompositeOperation: {\n          ctx.globalCompositeOperation = GlobalCompositeOperationValue[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.ImageSmoothingEnabled: {\n          ctx.imageSmoothingEnabled = data[i + 1] === 1;\n          break;\n        }\n        case CanvasInstruction.ImageSmoothingQuality: {\n          ctx.imageSmoothingQuality = ImageSmoothingQuality[data[i + 2]] as \"low\" | \"medium\" | \"high\";\n          break;\n        }\n        case CanvasInstruction.LineCap: {\n          ctx.lineCap = LineCap[data[i + 2]] as CanvasLineCap;\n          break;\n        }\n        case CanvasInstruction.LineDash: {\n          // @ts-ignore: Float64Array is not a valid TypedArrayConstructor, and setLineDash accepts Float64Array\n          ctx.setLineDash(wasm.getArray(Float64Array, data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.LineDashOffset: {\n          ctx.lineDashOffset = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.LineJoin: {\n          ctx.lineJoin = LineJoin[data[i + 2]] as CanvasLineJoin;\n          break;\n        }\n        case CanvasInstruction.LineTo: {\n          ctx.lineTo(data[i + 2], data[i + 3]);\n          break;\n        }\n        case CanvasInstruction.LineWidth: {\n          ctx.lineWidth = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.MiterLimit: {\n          ctx.miterLimit = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.MoveTo: {\n          ctx.moveTo(data[i + 2], data[i + 3]);\n          break;\n        }\n        case CanvasInstruction.QuadraticCurveTo: {\n          ctx.quadraticCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Rect: {\n          ctx.rect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.Restore: {\n          ctx.restore();\n          break;\n        }\n        case CanvasInstruction.Save: {\n          ctx.save();\n          break;\n        }\n        case CanvasInstruction.SetTransform: {\n          ctx.setTransform(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\n          break;\n        }\n        case CanvasInstruction.ShadowBlur: {\n          ctx.shadowBlur = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.ShadowColor: {\n          ctx.shadowColor = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.ShadowOffsetX: {\n          ctx.shadowOffsetX = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.ShadowOffsetY: {\n          ctx.shadowOffsetY = data[i + 2];\n          break;\n        }\n        case CanvasInstruction.Stroke: {\n          ctx.stroke();\n          break;\n        }\n        case CanvasInstruction.StrokeGradient: {\n          ctx.strokeStyle = wasm.gradients[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.StrokePattern: {\n          ctx.strokeStyle = wasm.patterns[data[i + 2]];\n          break;\n        }\n        case CanvasInstruction.StrokeRect: {\n          ctx.strokeRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\n          break;\n        }\n        case CanvasInstruction.StrokeStyle: {\n          ctx.strokeStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\n          break;\n        }\n        case CanvasInstruction.StrokeText: {\n          ctx.strokeText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n          );\n          break;\n        }\n        case CanvasInstruction.StrokeTextWidth: {\n          ctx.strokeText(\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\n            data[i + 3],\n            data[i + 4],\n            data[i + 5],\n          );\n          break;\n        }\n        case CanvasInstruction.TextAlign: {\n          ctx.textAlign = TextAlign[data[i + 2]] as CanvasTextAlign;\n          break;\n        }\n        case CanvasInstruction.TextBaseline: {\n          ctx.textBaseline = TextBaseline[data[i + 2]] as CanvasTextBaseline;\n          break;\n        }\n      }\n      i = data[i + 1];\n    }\n  }\n\n  disposeCanvasPattern(id: number): void {\n    delete this.wasm!.patterns[id];\n  }\n\n  disposeImage(id: number): void {\n    delete this.wasm!.images[id];\n  }\n\n  disposeCanvasGradient(id: number): void {\n    delete this.wasm!.gradients[id];\n  }\n\n  isPointInPath(id: number, x: number, y: number, fillRule: FillRule): number {\n    return bool[(<any>this.wasm!.contexts[id]).isPointInPath(x, y, FillRule[fillRule]).toString() as \"true\" | \"false\"];\n  }\n\n  isPointInStroke(id: number, x: number, y: number): number {\n    return bool[(<any>this.wasm!.contexts[id]).isPointInStroke(x, y).toString() as \"true\" | \"false\"];\n  }\n}\n",
    "/**\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\n * of compositing operation to apply when drawing new shapes.\n */\nexport enum GlobalCompositeOperation {\n  /**\n   * This is the default setting and draws new shapes on top of the existing canvas content\n   */\n  source_over = 0,\n  /**\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\n   * Everything else is made transparent.\n   */\n  source_in = 1,\n  /**\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\n   */\n  source_out = 2,\n  /**\n   * The new shape is only drawn where it overlaps the existing canvas content.\n   */\n  source_atop = 3,\n  /**\n   * New shapes are drawn behind the existing canvas content.\n   */\n  destination_over = 4,\n  /**\n   * The existing canvas content is kept where both the new shape and existing canvas content\n   * overlap. Everything else is made transparent.\n   */\n  destination_in = 5,\n  /**\n   * The existing content is kept where it doesn't overlap the new shape.\n   */\n  destination_out = 6,\n  /**\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\n   * behind the canvas content.\n   */\n  destination_atop = 7,\n  /**\n   * Where both shapes overlap the color is determined by adding color values.\n   */\n  lighter = 8,\n  /**\n   * Only the new shape is shown.\n   */\n  copy = 9,\n  /**\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\n   */\n  xor = 10,\n  /**\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\n   * layer. A darker picture is the result.\n   */\n  multiply = 11,\n  /**\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\n   * (opposite of multiply)\n   */\n  screen = 12,\n  /**\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\n   * parts become lighter.\n   */\n  overlay = 13,\n  /**\n   * Retains the darkest pixels of both layers.\n   */\n  darken = 14,\n  /**\n   * Retains the lightest pixels of both layers.\n   */\n  lighten = 15,\n  /**\n   * Divides the bottom layer by the inverted top layer.\n   */\n  color_dodge = 16,\n  /**\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\n   */\n  color_burn = 17,\n  /**\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\n   */\n  hard_light = 18,\n  /**\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\n   */\n  soft_light = 19,\n  /**\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\n   * value.\n   */\n  difference = 20,\n  /**\n   * Like difference, but with lower contrast.\n   */\n  exclusion = 21,\n  /**\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\n   */\n  hue = 22,\n  /**\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\n   */\n  saturation = 23,\n  /**\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\n   */\n  color = 24,\n  /**\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\n   */\n  luminosity = 25,\n}\n",
    "import { ASUtil } from \"assemblyscript/lib/loader\";\nimport { ICanvasSYS } from \"./util/ICanvasSYS\";\nimport { AS2DGlue } from \"./glue/AS2DGlue\";\n\nexport function instantiateBuffer<T>(buffer: Buffer, imports: any = {}): ICanvasSYS & ASUtil & T {\n  var glue: AS2DGlue<T> = new AS2DGlue();\n  return glue.instantiateBuffer(buffer, imports);\n}\n\nexport function instantiate<T>(mod: any, imports: any = {}): ICanvasSYS & ASUtil & T {\n  var glue: AS2DGlue<T> = new AS2DGlue();\n  return glue.instantiate(mod, imports);\n}\n\nexport function instantiateStreaming<T>(response: Promise<Response>, imports: any = {}): Promise<ICanvasSYS & ASUtil & T> {\n  var glue: AS2DGlue<T> = new AS2DGlue();\n  return glue.instantiateStreaming(response, imports);\n}\n\nexport * from \"./glue/AS2DGlue\";\n\nexport * from \"./shared/CanvasDirection\";\nexport * from \"./shared/CanvasInstruction\";\nexport * from \"./shared/CanvasPatternRepetition\";\nexport * from \"./shared/FillRule\";\nexport * from \"./shared/GlobalCompositeOperation\";\nexport * from \"./shared/GlobalCompositeOperationValue\";\nexport * from \"./shared/ImageSmoothingQuality\";\nexport * from \"./shared/LineCap\";\nexport * from \"./shared/LineJoin\";\nexport * from \"./shared/TextAlign\";\nexport * from \"./shared/TextBaseline\";\n\nexport * from \"./util/ICanvasSYS\";\n",
    "// this is a shallow wrapper for the assemblyscript loader\nimport {instantiateStreaming} from \"as2d\";\nimport {ASUtil} from \"assemblyscript/lib/loader\";\n\n\nconst env = {\n    memoryBase: 0,\n    tableBase: 0,\n    memory: new WebAssembly.Memory({\n        initial: 0\n    }),\n    abort(msg, file, line, column) {\n        console.error(\"abort called at \" + file + \":\" + line + \":\" + column + \", msg:\" + msg);\n    }\n};\n\nclass ASModuleWrapper {\n    module: ASUtil | null = null;\n\n    init(module: ASUtil): void {\n        this.module = module;\n    }\n\n    protected getString = (value) => {\n        if (this.module == null) {\n            return value;\n        } else {\n            return this.module.getString(value);\n        }\n    };\n\n    protected getArray = (type, value) => {\n        if (this.module == null) {\n            return value;\n        } else {\n            return this.module.getArray(type, value);\n        }\n    };\n}\n\n//function use array style for keep this ref.\n//see https://github.com/Microsoft/TypeScript/wiki/'this'-in-TypeScript\nclass Console extends ASModuleWrapper {\n\n    public log = (value) => {\n        console.log(this.getString(value));\n    };\n    public logf = (msg, value) => {\n        console.log(this.getString(msg), value)\n    };\n    public logi = (msg, value) => {\n        console.log(this.getString(msg), value)\n    };\n    public logAction = (msg, player, state) => {\n        console.log(this.getString(msg) + \" player:\", player, this.getArray(Int8Array, state))\n    }\n}\n\nclass Listener extends ASModuleWrapper {\n\n    public onUpdate = (player, state) => {\n        console.log(\"listener onUpdate\", player, this.getArray(Int8Array, state));\n    };\n\n    public onGameOver = (player) => {\n        console.log(\"listener onGameOver\", player);\n        alert(\"Game Over Winner is:\" + player);\n    }\n}\n\n\nconst engineConsole = new Console();\nconst guiConsole = new Console();\nconst listener = new Listener();\n\nexport function init(engineURL = \"/engine_optimized.wasm\", guiURL=\"/gui_optimized.wasm\"){\n    return instantiateStreaming(fetch(engineURL), {env: env, console: engineConsole, listener: listener}).then(engine => {\n        engineConsole.init(engine);\n        listener.init(engine);\n        engine.init();\n        return engine;\n    }).then(engine => {\n            instantiateStreaming(fetch(guiURL), {\n                env: env, console: guiConsole, engine: {\n\n                    update(player, state) {\n                        let pointer = engine.newArray(module.getArray(Int8Array, state));\n                        return engine.update(player, pointer)\n                    },\n                    loadState(fullState) {\n                        let pointer = engine.newArray(module.getArray(Int8Array, fullState));\n                        engine.loadState(pointer)\n                    },\n                    getState() {\n                        let pointer = module.newArray(engine.getArray(Uint8Array, engine.getState()))\n                        return pointer\n                    },\n                    isGameOver() {\n                        return engine.isGameOver()\n                    }\n                }\n            }).then(gui => {\n                guiConsole.init(gui);\n                const canvas = document.querySelector(\"#as2d\");\n                const ctx = canvas.getContext(\"2d\");\n\n                ctx.canvas.addEventListener(\"click\", (e) => {\n                    var rect: ClientRect = (e.target as HTMLCanvasElement).getBoundingClientRect();\n                    gui.onClick(e.clientX - rect.left, e.clientY - rect.top);\n                });\n\n                gui.useContext(\"main\", ctx);\n                gui.init();\n                gui.draw();\n            });\n\n        }\n    );\n}\n\n\n"
  ]
}